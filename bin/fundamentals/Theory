Call Hierarchy(Constructor/static and instance methods):
	Order of execution;
	- static block
	- instance block
	- Constructor
	
	with child/parent relationship
	- Parent static block
	- child static block
 	- Parent instance block
	- Parent Constructor
	- child instance block
	- child Constructor
	
Final, finally and finalize

	- final    :  keyword
	- finally  :  block
	- finalize :  method (called by gc)
	
What is equals and hashcode method and its contract

	- Hashcode : used to generate unique or reference number of an object through which we can easily identify uniqueness of an object

	- Equals : used to compare object based on its content

	- Both method present in java.lang.Object class
	
Exception:
	- How to create custom exception
		extends Exception
		
	- Will finally block everytime
		yes
	
	- ExceptionOrder 
		Broader one at last
		
	- are checked exceptions are complie time exception, can't we get it at runtime?
		No, 
		we can get checked exceptions at runtime ex: FileNotFoundException
		
Why String is immutable 
Immutable simply means unmodifiable or unchangeable.

	- String pool is possible only because String is immutable in Java. 
	  This way Java Runtime saves a lot of heap space because different String variables
	  can refer to the same String variable in the pool. 

	- If String is not immutable then it would cause a severe security threat to the application.
	 For example, database username, password are passed as String to get database connection 
	 and in socket programming host and port details passed as String. 
	 
	 Since String is immutable, its value can’t be changed otherwise any hacker 
	 could change the referenced value to cause security issues in the application.

	- Since String is immutable, it is safe for multithreading. 
	  A single String instance can be shared across different threads. 
	  This avoids the use of synchronization for thread safety. 

	- Since String is immutable, its hashcode is cached at the time of creation and it doesn’t 
	  need to be calculated again. This makes it a great candidate for the key in a Map and 
	  its processing is faster than other HashMap key objects. This is why String is the 
	  most widely used as HashMap keys
	  
How to write your own custom immutable class

	- Make your class final 

	- Declare all instance variable with private and final 

	- Say no to setter methods 

	- Initialize all variables in constructor 

	- You can initialize variables in constructor

	- Perform cloning of mutable objects while returning from getter method
	
Generics

		https://www.youtube.com/watch?v=ANzefryEvRo
		
		https://www.youtube.com/watch?v=OddYBiLxZ9Y
		
		m((List<String> list)) // Except String variables
		- we can add only string type of objects to the list
		list.add("tes");
		list.add(null);
		list.add(10); CT Error
		
		
		m((List<?> list)) // we can call this method by passing any type of object. but can we add any value inside it?
		

	-https://www.baeldung.com/java-generics-interview-questions
	
	-At class level super is not allowed
		class D<T super Number>{} //Give CE
		class D<T extends Number>{} // work normally
		
	- List<? extends Number> number = new ArrayList<String>(); //Error
	- List<? extends Object> o = new ArrayList<String>(); // No Error
	
	we cant define same method name with different generic argument
		public void ma(ArrayList<Integer> i) {}	   
	    public void ma(ArrayList<String> i) {}
	    //Error: Erasure of method ma(ArrayList<Integer>) is the same as another method in type GenericsTest
	    
	At class level generic can be add after class name  and at method before return type
	  